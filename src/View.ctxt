#BlueJ class context
comment0.params=model
comment0.target=View(Model)
comment0.text=\r\n\ Constructor\ voor\ een\ object\ View,\ de\ begininstellingen\ zijn\:\ de\ grote\ van\ het\ scherm\ in\ x\ en\ y\ richiting\ worden\ uit\ het\ model\ gehaald,\ de\ Z\ is\ standaard\ 50\r\n\ de\ verschuiving\ in\ x\ richting\ is\ 0\ en\ in\ y\ richting\ is\ 90\ pixel\r\n
comment1.params=
comment1.target=void\ maakPad()
comment1.text=\r\n\ Method\ maakPad\ Deze\ methode\ gaat\ alle\ Grond\ objecten\ af\ en\ vult\ ,naar\ gelang\ de\ parameters\ van\ elke\ Grond\ object,\ de\ volgende\ 50\ posities\ van\ de\ pad\ array\ \r\n\ met\ de\ juiste\ y\ waardes\ zodat\ de\ werker\ lijkt\ over\ het\ landschap\ te\ lopen.\ wordt\ door\ de\ contructor\ van\ dit\ object\ gebruikt\r\n\r\n
comment10.params=
comment10.target=int\ getZ()
comment10.text=\r\n\ Method\ getZ\ geeft\ de\ grootte\ van\ de\ zijde\ van\ het\ rooster\r\n\r\n\ @return\ Z\ int,\ \ \ de\ grootte\ van\ een\ zijde\ van\ een\ rooster\r\n
comment11.params=
comment11.target=int\ getSizeY()
comment11.text=\r\n\ Method\ getSizeY\ geeft\ de\ grote\ van\ het\ scherm\ in\ x\ richting\ terug\r\n\r\n\ @return\ sizeY\ int,\ \ \ \ de\ grote\ van\ het\ scherm\r\n
comment12.params=g
comment12.target=void\ tekenHemel(java.awt.Graphics)
comment12.text=\r\n\ Method\ tekenHemel\ teken\ de\ zon\ als\ het\ dag\ is\ en\ de\ maan\ en\ sterren\ als\ het\ nacht\ is.\r\n\r\n\ @param\ g\ Graphics,\ de\ grafische\ beelden\ die\ aangepast\ worden\ \r\n
comment13.params=g
comment13.target=void\ tekenHulp(java.awt.Graphics)
comment13.text=\r\n\ Method\ tekenHulp\ tekend\ de\ hulp\ text\ als\ hulpmode\ aan\ staat.\ bij\ verschillende\ statusen\ van\ parameters\ in\ het\ model\ worden\ er\ andere\ zinnne\ op\ ander\ plaatsen\ gezet\r\nals\ het\ nacht\ wordt\ wordt\ het\ meeste\ van\ de\ tekst\ wit\r\n\r\n\ @param\ g\ Graphics,\ de\ grafische\ beelden\ die\ aangepast\ worden\ \r\n
comment2.params=x
comment2.target=int\ getPadWaarde(int)
comment2.text=\r\n\ Method\ getPadWaarde\ geeft\ de\ y\ waarde\ die\ bij\ een\ x\ waarde\ hoort.\ wordt\ door\ de\ controler\ en\ view\ gebruikt\r\n\r\n\ @param\ x\ int\ \ \ \ de\ x\ waarde\ waar\ de\ y\ waarde\ van\ geweten\ wil\ worden\ tussen\ 0\ en\ landschap.getX()*50\r\n\ @return\ pad[x]\ int\ \ \ de\ y\ waarde\ die\ bij\ x\ hoort\ tussen\ 70-770\ \ \r\n
comment3.params=g
comment3.target=void\ paint(java.awt.Graphics)
comment3.text=\r\n\ Method\ paint\ als\ er\ nog\ geen\ buffer\ is\ dan\ wordt\ die\ gemaakt\ en\ anders\ wordt\ op\ de\ bestaande\ buffer\ de\ nieuw\ beelden\ getekend\ en\ deze\ worden\ op\ het\ scherm\ gezet.\r\n\r\n\ @param\ g\ Graphics,\ de\ grafische\ beelden\ die\ aangepast\ worden\ \r\n
comment4.params=g
comment4.target=void\ update(java.awt.Graphics)
comment4.text=\r\n\ Method\ update\ een\ herdefinitie\ van\ de\ update\ methode\ zodat\ deze\ alleen\ maar\ teken\ en\ niks\ wist.\r\n\r\n\ @param\ g\ Graphics,\ de\ grafische\ beelden\ die\ aangepast\ worden\ \r\n
comment5.params=g
comment5.target=void\ teken(java.awt.Graphics)
comment5.text=\r\n\ Method\ teken\ eerst\ wordt\ heel\ het\ scherm\ leeg\ gemaakt\ en\ dan\ wordt\ langs\ een\ bepaalde\ volgorde\ de\ verschillend\ elementen\ van\ het\ model\ getekend\r\n\r\n\ @param\ g\ Graphics,\ de\ grafische\ beelden\ die\ aangepast\ worden\ \r\n
comment6.params=g
comment6.target=void\ paintWerker(java.awt.Graphics)
comment6.text=\r\n\ Method\ paintWerker\ gaat\ alle\ werkers\ uit\ het\ model\ af\ en\ tekend\ ze\ als\ ze\ niet\ in\ een\ structuur\ zitten,\ de\ geselecteerde\ \ werker\ wordt\ deze\ rood\ gekleurd,\r\n\ en\ wordt\ er\ boven\ de\ werker\ zijn\ naam,\ hoeveelheid\ lading\ en\ lading\ type\ weergegeven.\ als\ de\ muis\ boven\ de\ werker\ hangt\ wordt\ er\ een\ rechthoek\ rond\ de\ werker\ getekend\r\n\ als\ de\ hulp\ in\ model\ aan\ is\ zal\ er\ ondersteunend\ tekst\ boven\ een\ werker\ komen\r\n\ \r\n\ @param\ g\ Graphics,\ de\ grafische\ beelden\ die\ aangepast\ worden\ \r\n
comment7.params=g
comment7.target=void\ paintLand(java.awt.Graphics)
comment7.text=\r\n\ Method\ paintLand\ overal\ waar\ een\ grond\ object\ is\ wordt\ een\ zwarte\ balk\ met\ daarboven\ een\ kleinere\ groene\ balk\ getekend\ in\ de\ methode\ kan\ de\ tredegrootte\r\n\ aangepast\ worden\ hierdoor\ zal\ de\ trap\ bij\ het\ boven\ of\ onder\ gaan\ ruwer\ worden\r\n\r\n\ @param\ g\ Graphics,\ de\ grafische\ beelden\ die\ aangepast\ worden\ \r\n
comment8.params=g
comment8.target=void\ paintObjecten(java.awt.Graphics)
comment8.text=\r\n\ Method\ paintObjecten\ gaat\ alle\ objecten\ af\ en\ teken\ ze\ naar\ gelang\ hun\ type\ en\ positie,het\ geselecteerde\ \ object\ wordt\ rood\ gekleurd\ en\ bij\ grondstoffen\r\n\ wordt\ de\ nog\ aanwezige\ hoeveelheid\ in\ de\ grondstoffen\ weergeven,\ als\ de\ muis\ boven\ het\ object\ hangt\ wordt\ er\ een\ rechthoek\ rond\ het\ object\ getekend.\r\n\r\n\ @param\ g\ Graphics,\ de\ grafische\ beelden\ die\ aangepast\ worden\ \r\n
comment9.params=
comment9.target=int\ getSizeX()
comment9.text=\r\n\ Method\ getSizeX\ geeft\ de\ grote\ van\ het\ scherm\ in\ x\ richting\ terug\r\n\r\n\ @return\ sizeX\ int,\ \ \ \ de\ grote\ van\ het\ scherm\r\n
numComments=14
