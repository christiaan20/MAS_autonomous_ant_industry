#BlueJ class context
comment0.params=w\ o\ model\ view
comment0.target=GatherAnimation(Werker,\ Object,\ Model,\ GroteView)
comment0.text=\r\n\ Constructor\ voor\ Objecten\ van\ GatherAnimation\r\n\ \r\n\ @param\ w\ int,\ \ \ \ de\ werker\ die\ grondstoffen\ verzameld\r\n\ @param\ o\ Object,\ Het\ object\ waar\ de\ werker\ aan\ het\ verzamelen\ is\r\n\ @param\ model\ Model,\ \ het\ model\ waartoe\ de\ werker\ behoort.\r\n\ @param\ view\ GroteView,\ \ \ De\ GroteView\ \ die\ upgedate\ moet\ worden\r\n\ \r\n
comment1.params=
comment1.target=void\ run()
comment1.text=\r\n\ Method\ run\ wanneer\ het\ object\ waar\ de\ werker\ in\ zit\ van\ het\ type\ grondstoffen\ is\ dan\ zal\ er\ zolang\ als\ de\ werker\ in\ de\ structuur\ zit,\ de\ werker\r\n\ niet\ vol\ is,\ de\ werker\ dezelfde\ type\ van\ lading\ al\ heeft\ als\ het\ type\ van\ het\ object\ of\ de\ werker\ geen\ lading\ heeft\ en\ zolang\ er\ nog\ stoffen\ in\ \r\n\ het\ object\ zitten.\ zal\ de\ werker\ om\ de\ 2,5\ seconden\ een\ eenheid\ van\ grondstoffen\ van\ het\ object\ krijgen.\ na\ de\ cyclus\ wordt\ er\ gechecked\ of\ het\r\n\ ontgonnen\ object\ leeg\ is\ of\ niet\ ,\ zo\ ja\ wordt\ het\ verwijderd\ anders\ niks.\ daarna\ wordt\ de\ werker\ uit\ het\ object\ gezet.\ als\ het\ object\ een\ gebouw\ is\r\n\ met\ functie\ hoofhdgebouw\ of\ opslag\ dan\ zal\ de\ lading\ van\ de\ werker\ bij\ de\ juist\ grondstof\ worden\ opgeteld\ in\ het\ model\ en\ verliest\ de\ werker\ zijn\ lading\r\n\ De\ groteview\ wordt\ geupdate\ en\ de\ werker\ wordt\ uit\ het\ object\ gezet.\r\n\ Als\ de\ werker\ een\ huidig\ werk\ heeft\ en\ als\ deze\ in\ het\ object\ zit\ wat\ zijn\ werk\ is\ zal\ een\ move\ thread\ naar\ het\ dichtbij\ zijnde\ opslag\ of\ hoofdgebouw\ \r\n\ geiniteert\ worden\ en\ als\ de\ werker\ niet\ in\ het\ object\ van\ huidig\ werk\ zit\ dan\ wordt\ een\ moveThread\ naar\ het\ huidige\ werk\ ge\u00EFniteert.\r\n\r\n
numComments=2
